# Global settings applied to the whole site.
#
# more informations on : https://www.netlify.com/docs/netlify-toml-reference/
#
# “publish” is the directory to publish (relative to root of your repo),
# “command” is your build command,
# “base” is directory to change to before starting build. if you set base:
#    that is where we will look for package.json/.nvmrc/etc not repo root!
# "functions" is the directory with the lambda functions to deploy to AWS.

# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  base    = "./"

  # Directory (relative to root of your repo) that contains the deploy-ready
  # HTML files and assets generated by the build.
  publish = "./dist/acrabadabra/"

  # Default build command.
  command = "yarn build"

  # Directory with the lambda functions to deploy to AWS.
  # functions = "./functions/"

# Production context: All deploys to the main
# repository branch will inherit these settings.
[context.production]
  command = "yarn build:prod"
#  [context.production.environment]
#    ACCESS_TOKEN = "super secret"

# Deploy Preview context: all deploys resulting from a pull/merge request will
# inherit these settings.
[context.deploy-preview]
  command = "yarn build:dev"
  MONGO_DB = "acra_test"

# Deploy Preview context: All Deploy Previews
# will inherit these settings.
#[context.deploy-preview.environment]
#  ACCESS_TOKEN = "not so secret"

# Branch Deploy context: All deploys that are not in
# an active Deploy Preview will inherit these settings.
[context.branch-deploy]
  command = "yarn build:dev"
  MONGO_DB = "acra_test"

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
[context.staging] # 'staging' is a branch name
  command = "yarn build:staging"
  MONGO_DB = "acra_test"
#  base = "staging"

# A redirect rule with all the supported properties
#[[redirects]]
#  from = "/old-path"
#  to = "/new-path"

  # The default HTTP status code is 301, but you can define a different one.
#  status = 302

  # By default, redirects won't be applied if there's a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
#  force = true

  # Redirect from /old-path?id=123 to /new-path. Each combination of query
  # params needs to be defined in a separate [[redirects]] block.
  # More information at https://www.netlify.com/docs/redirects/#query-params
#  query = {id = ":id"}

  # Redirect based on browser language, geolocation, and/or identity role.
#  conditions = {Language = ["en"], Country = ["US"], Role = ["admin"]}

  # Sign each request with a value defined in an environment variable
#  signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
#  [redirects.headers]
#    X-From = "Netlify"
#    X-Api-Key = "some-api-key-string"

# The following redirect is intended for use with most SPAs that handle
# routing internally.
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

#[[headers]]
  # Define which paths this specific [[headers]] block will cover.
#  for = "/*"

#  [headers.values]
#    X-Frame-Options = "DENY"
#    X-XSS-Protection = "1; mode=block"
#    Content-Security-Policy = "frame-ancestors https://www.facebook.com"

    # Multi-key header rules are expressed with multi-line strings.
#    Link = '''
#    </assets/css/base.css>; rel=preload; as=style, \
#    </assets/css/base2.css>; rel=preload; as=style, \
#    </assets/css/base3.css>; rel=preload; as=style'''

    # Basic-Auth allows you to password protect your whole site.
    # Only available to paid accounts.
#    Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"

[functions]
  external_node_modules = ["mongodb"]
