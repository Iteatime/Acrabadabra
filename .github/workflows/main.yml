name: CI

on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: YARN INSTALL
        run: yarn install --frozen-lockfile
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: YARN BUILD
        run: yarn build --progress=false
        env:
          CRYPTR_KEY: ${{ secrets.CRYPTR_KEY }}
          FAUNADB_SECRET: ${{ secrets.FAUNADB_SECRET }}
          PDF_API_KEY: ${{ secrets.PDF_API_KEY }}
          PDF_API_URL: ${{ secrets.PDF_API_URL }}
          SHORT_URL_API: ${{ secrets.SHORT_URL_API }}
          SHORT_URL_API_KEY: ${{ secrets.SHORT_URL_API_KEY }}
          SHORT_URL_WORKSPACE: ${{ secrets.SHORT_URL_WORKSPACE }}

  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: YARN TEST
        run: yarn test
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: YARN LINT
        run: yarn lint:ci

  cypress:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: YARN CYPRESS INSTALL
        run: yarn cypress install

      - name: YARN CYPRESS
        run: |
          yarn run config
          tools/cypress-start-and-test.sh
        env:
          CRYPTR_KEY: ${{ secrets.CRYPTR_KEY }}
          FAUNADB_SECRET: ${{ secrets.FAUNADB_SECRET }}
          PDF_API_KEY: ${{ secrets.PDF_API_KEY }}
          PDF_API_URL: ${{ secrets.PDF_API_URL }}
          SHORT_URL_API: ${{ secrets.SHORT_URL_API }}
          SHORT_URL_API_KEY: ${{ secrets.SHORT_URL_API_KEY }}
          SHORT_URL_WORKSPACE: ${{ secrets.SHORT_URL_WORKSPACE }}

      - name: CYPRESS SCREENSHOTS
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: '**/cypress/screenshots'

      - name: CYPRESS VIDEOS
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: '**/cypress/videos'
